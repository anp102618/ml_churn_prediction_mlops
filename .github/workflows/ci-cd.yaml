name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
  DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  MLFLOW_TRACKING_URI: https://dagshub.com/${{ secrets.DAGSHUB_USERNAME }}/ml_churn_prediction_mlops.mlflow

jobs:

  ######################################
  # 1. Train, Track, Test , deploy the Model
  ######################################
  build-train-test-deploy:
    runs-on: ubuntu-latest
    outputs:
      promotion_status: ${{ steps.promotion.outputs.status }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r app_requirements.txt
          pip install -r requirements.txt || true  # in case some extras overlap

      - name: Configure Git
        run: |
          git config --global user.name "anp102618"
          git config --global user.email "a.n.prasad155@gmail.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}

      - name: Configure DVC Remote
        run: |
          dvc remote add -d -f origin_remote https://dagshub.com/${DAGSHUB_USERNAME}/ml_churn_prediction_mlops.dvc
          dvc remote modify origin_remote auth basic
          dvc remote modify --local origin_remote user ${DAGSHUB_USERNAME}
          dvc remote modify --local origin_remote password ${DAGSHUB_TOKEN}
          
      - name: Debug DVC remote config
        run: |
          cat .dvc/config
          dvc remote list --verbose

      - name: Enable DVC Auto-Staging
        run: |
          dvc config core.autostage true
      
      - name: Run Model Training
        run: python main.py

      - name: Track MLflow Experiment on DagsHub
        run: python src/Experiment_Tracking_Prediction.py

      - name: Run Model Promotion Test
        run: python -m unittest Test_Script/test_model_promotion.py 

      - name: Add Files to DVC after git delinking and commit
        run: |
          git rm -r --cached Data/ref_data
          dvc add Data/ref_data
          git add Data/ref_data.dvc .gitignore
          git commit -m "Switch ref_data to DVC tracking"
          git push origin main


      - name: DVC Push
        run: |
          dvc push

      - name: Set Timestamp Tag
        id: timestamp
        run: echo "TAG=$(date +'%Y%m%d%H%M%S')" >> "$GITHUB_OUTPUT"


      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        id: docker
        run: |
          TAG=${{ steps.timestamp.outputs.TAG }}
          IMAGE_NAME=${{ env.DOCKERHUB_USERNAME }}/churn_prediction_app:$TAG
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_OUTPUT

          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      
